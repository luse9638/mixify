-- In order for this file and insert.sql to be run when the database initializes, you need
-- to remove all volumes first, which can be done with docker compose down --volumes
-- then, next time that docker compose up is run these files will be run

-- this is the table of all users, stored by their unique userID, a string of random letters and numbers generated by spotify
CREATE TABLE userIDs(
    userID VARCHAR(50) PRIMARY KEY
);

-- this table links unique userIDs to possible not unique display names that users can set in spotify
-- for showing friends, we'll want to refer to users by their display names instead of by their userIDs
CREATE TABLE userIDsToDisplayNames(
    userID VARCHAR(50) PRIMARY KEY,
    displayName VARCHAR(50)
);

-- this table links userIDs that are friends
CREATE TABLE friends(
    userID VARCHAR(50),
    friendUserID VARCHAR(50)
);


CREATE TABLE lillian_songs(
    song VARCHAR(100),
    artist VARCHAR(50)
);


CREATE TABLE justin_songs(
    song VARCHAR(100),
    artist VARCHAR(50)
);

-- Request for EJS to get the songs: 
-- SELECT lillian_songs.song FROM lillian_songs INNER JOIN justin_songs ON lillian_songs.song = justin_songs.song;